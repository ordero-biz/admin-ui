name: Sync main to qa

on:
  workflow_dispatch: # Triggered manually

permissions:
  contents: write      # For creating branches/commits
  pull-requests: write # For handling pull requests
  actions: write       # For programmatically approving a PR

jobs:
  sync-main-to-qa:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Fetch changes and ensure proper comparison
      - name: Fetch all branches
        run: git fetch --all

      # Step 3: Compare main and qa branches
      - name: Compare main and qa branches
        id: check_diff
        run: |
          git fetch origin main:main qa:qa
          COMMITS_AHEAD=$(git rev-list --left-only --count origin/main...origin/qa)
          echo "Main is $COMMITS_AHEAD commits ahead of QA"
          echo "commits_ahead=$(echo "$COMMITS_AHEAD" | xargs)" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Debugging step for commits_ahead
      - name: Debug commits_ahead value
        run: |
          echo "Commits ahead: ${{ env.commits_ahead }}"

      # Step 4: Create PR from main to qa
      - name: Create PR from main to qa
        id: create_pr
        if: ${{ env.commits_ahead != '0' }}
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: temp-sync-main-to-qa
          base: qa
          title: Sync main to qa
          body: |
            This automated PR merges the latest changes from `main` into `qa`.
          labels: automated
          delete-branch: true

      # Step 5: Auto-approve pull request
      - name: Auto-approve pull request
        if: steps.create_pr.outputs.pull-request-url != '' # Only if a PR was created
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER=$(echo "${{ steps.create_pr.outputs.pull-request-url }}" | grep -oE '[0-9]+$')
          curl -X POST -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/reviews \
            -d '{"body": "Automatically approved", "event": "APPROVE"}'

      # Step 6: Auto-merge pull request
      - name: Auto-merge pull request
        if: steps.create_pr.outputs.pull-request-url != '' # Only if a PR was created
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER=$(echo "${{ steps.create_pr.outputs.pull-request-url }}" | grep -oE '[0-9]+$')
          curl -X PUT -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/merge \
            -d '{"merge_method": "squash"}'