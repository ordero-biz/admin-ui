name: Sync QA with Main

on:
  workflow_dispatch: # Allows manual triggering of the workflow

permissions:
  contents: write
  pull-requests: write

jobs:
  sync:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          ref: main # Ensure the main branch is checked out
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create a new branch from main
        run: |
          git checkout -b sync-main-to-qa

      - name: Merge qa into the new branch
        run: |
          git merge origin/qa --no-ff --no-commit

      - name: Push the new branch
        run: |
          git push -u origin sync-main-to-qa
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create pull request
        id: create_pr
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: qa
          branch: sync-main-to-qa
          title: 'Sync QA with Main'
          body: 'This is an automated pull request to sync the `qa` branch with the latest changes from the `main` branch.'
          commit-message: 'Sync QA with Main'

      - name: Checkout the created pull request branch
        run: |
          git fetch origin pull/${{ steps.create_pr.outputs.pull-request-number }}/head:pr-${{ steps.create_pr.outputs.pull-request-number }}
          git checkout pr-${{ steps.create_pr.outputs.pull-request-number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge the pull request
        run: |
          git checkout qa
          git merge pr-${{ steps.create_pr.outputs.pull-request-number }}
          git push origin qa
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}