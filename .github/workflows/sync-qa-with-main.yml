name: Sync QA with Main

on:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  sync_qa_with_main:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Compare main and qa branches
        id: check_diff
        run: |
          git fetch origin
          echo "Comparing commits..."
          COMMITS_AHEAD=$(git rev-list --left-only --count origin/main...origin/qa)
          echo "Main is $COMMITS_AHEAD commits ahead of QA"
          echo "commits_ahead=$(echo "$COMMITS_AHEAD" | xargs)" >> $GITHUB_ENV

      - name: Debugging Commit Information
        run: |
          echo "Tracked remote branches:"
          git branch -r
          echo "Commits Ahead: ${{ env.commits_ahead }}"
          git log origin/qa..origin/main --oneline || echo "No commits difference."

      - name: Create new sync branch
        if: ${{ env.commits_ahead != '0' }}
        run: |
          git checkout -b temp-sync-main-to-qa origin/main
          git commit --allow-empty -m "[Automation] Force PR with empty commit"
          git push --force origin temp-sync-main-to-qa

      - name: Create Pull Request
        id: create_pr_step
        if: ${{ env.commits_ahead != '0' }}
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: temp-sync-main-to-qa
          base: qa
          title: "[Automation] Sync main to qa"
          body: |
            ## Automated Pull Request
            This PR merges changes from `main` into `qa`.

            **Commits Ahead**: ${{ env.commits_ahead }}
          labels: automated
          delete-branch: true
          commit-message: "[Automation] Sync main to qa"
          branch-suffix: timestamp

      - name: Debug PR Creation Logs
        run: |
          echo "PR URL: ${{ steps.create_pr_step.outputs.pull-request-url }}"
          echo "PR Branch: ${{ steps.create_pr_step.outputs.pull-request-branch }}"

      - name: Auto-Approve PR
        if: ${{ steps.create_pr_step.outputs.pull-request-url != '' }}
        run: |
          PR_NUMBER=$(echo "${{ steps.create_pr_step.outputs.pull-request-url }}" | grep -oE '[0-9]+$')
          curl -X POST -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/reviews \
            -d '{"body":"Auto-approved by workflow.","event":"APPROVE"}'

      - name: Auto-Merge PR
        if: ${{ steps.create_pr_step.outputs.pull-request-url != '' }}
        run: |
          PR_NUMBER=$(echo "${{ steps.create_pr_step.outputs.pull-request-url }}" | grep -oE '[0-9]+$')
          curl -X PUT -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/merge \
            -d '{"merge_method":"squash"}'